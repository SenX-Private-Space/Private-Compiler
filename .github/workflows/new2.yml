name: FD-tester-munch-builder

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE_1:
        description: 'Kernel Tree 1'
        default: 'https://github.com/SenX-Private-Space/fx-tst'
        required: true
      KERNEL_TREE_BRANCH_1:
        description: 'Kernel Tree Branch 1'
        default: 'fx-base'
        required: true
      CODENAME:
        description: 'Phone Codename'
        default: 'munch'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/SenseiiX/AnyKernel3'
        required: false
      CUSTOM_SED:
        description: 'Custom Kernel Version'
        default: '-FusionX'
        required: false
      COMPILER:
        description: 'default=neutron, write aosp for aosp 20 clang'
        default: 'neutron'
        required: false

jobs:
  build:
    strategy:
      matrix:
        kernel: [1, 2, 3, 4, 5, 6]
    runs-on: ubuntu-latest
    env:
      UPLOAD_TO_RELEASE: false

    steps:
      - name: Install Dependencies
        run: sudo apt install flex libncurses6

      - name: Download & Extract Clang
        run: |
          if [[ "${{ github.event.inputs.COMPILER }}" == "aosp" ]]; then
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
            mkdir clang
            tar -xf clang.tar.gz -C clang
          else
            wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
            mkdir clang
            unzstd -d clang.tar.zst
            tar -xf clang.tar -C clang
          fi

      - name: Set Kernel Environment Variables
        run: |
          echo "KERNEL_TREE=${{ github.event.inputs.KERNEL_TREE_1 }}" >> $GITHUB_ENV
          echo "KERNEL_TREE_BRANCH=${{ github.event.inputs.KERNEL_TREE_BRANCH_1 }}" >> $GITHUB_ENV

      - name: Checkout Kernel
        run: |
          git clone --depth=1 --branch "${{ env.KERNEL_TREE_BRANCH }}" "${{ env.KERNEL_TREE }}" kernel_tree

      - name: Kernel Version
        run: |
          cd kernel_tree
          if [[ "${{ github.event.inputs.CUSTOM_SED }}" != "-FusionX" ]]; then
            sed -i -e 's/CONFIG_LOCALVERSION="-FusionX"/CONFIG_LOCALVERSION="${{ github.event.inputs.CUSTOM_SED }}"/' arch/arm64/configs/vendor/munch_defconfig
          fi

      - name: Remove cycle count
        run: |
          cd kernel_tree
          sed -i '/case POWER_SUPPLY_PROP_CYCLE_COUNT:/,/break;/c\
          \tcase POWER_SUPPLY_PROP_CYCLE_COUNT:\
          \t#ifdef CONFIG_BATT_VERIFY_BY_DS28E16\
          \t\tpval->intval = fg->maxim_cycle_count;\
          \t#else\
          \t\trc = get_cycle_count(chip->counter, &pval->intval);\
          \t#endif\
          \t\tbreak;' drivers/power/supply/qcom/qpnp-fg-gen4.c

      - name: Apply Modifications (if swift build)
        if: matrix.kernel == 5 || matrix.kernel == 6
        run: |
          cd kernel_tree
          sed -i -e '/<2841600>,/c\<2841600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/d' arch/arm64/boot/dts/vendor/qcom/kona.dtsi

      - name: Revert to stock gpufreq
        if: matrix.kernel == 3 || matrix.kernel == 4 || matrix.kernel == 6
        run: |
          cd kernel_tree
          patch -p1 -f < "0001-stock-gpu-freq.patch"

      - name: Apply Patches
        run: |
          cd kernel_tree
          bash nextpatch.sh

      - name: Apply Modifications (if modified build)
        if: matrix.kernel == 2 || matrix.kernel == 4
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\//<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\//<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <155>;/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi

      - name: Build Kernel
        run: |
          export PATH="$(pwd)/clang/bin:$PATH"
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="senx"
          export KBUILD_BUILD_HOST="ubuntu"
          export KBUILD_BUILD_TIMESTAMP="$(TZ=UTC-7 date)"
          cd kernel_tree
          make O=out vendor/munch_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          if [[ "${{ matrix.kernel }}" == 1 ]]; then
            mv out/arch/arm64/boot/dtbo.img ../munch-aosp-dtbo.img
            mv out/arch/arm64/boot/dtb.img ../munch-normal-dtb
            cp out/arch/arm64/boot/Image.gz ../Image.gz
          elif [[ "${{ matrix.kernel }}" == 2 ]]; then
            mv out/arch/arm64/boot/dtbo.img ../munch-miui-dtbo.img
            mv out/arch/arm64/boot/dtb.img ../munch-effcpu-dtb
          elif [[ "${{ matrix.kernel }}" == 3 ]]; then
            mv out/arch/arm64/boot/dtb.img ../munch-normal-gpustk-dtb
          elif [[ "${{ matrix.kernel }}" == 4 ]]; then
            mv out/arch/arm64/boot/dtb.img ../munch-effcpu-gpustk-dtb
          elif [[ "${{ matrix.kernel }}" == 5 ]]; then
            mv out/arch/arm64/boot/dtb.img ../munch-slightuc-dtb
          elif [[ "${{ matrix.kernel }}" == 6 ]]; then
            mv out/arch/arm64/boot/dtb.img ../munch-slightuc-gpustk-dtb
          fi

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-1-${{ matrix.kernel }}
          path: |
            *.img
            *-dtb
            Image.gz

  package_anykernel:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Kernel Build Original
        uses: actions/download-artifact@v4
        with:
          name: kernel-1-1
          path: kernel-1-1

      - name: Download Kernel Build Modified
        uses: actions/download-artifact@v4
        with:
          name: kernel-1-2
          path: kernel-1-2

      - name: Download Kernel Build Stock + Stock GPU
        uses: actions/download-artifact@v4
        with:
          name: kernel-1-3
          path: kernel-1-3

      - name: Download Kernel Build Effcpu + Stock GPU
        uses: actions/download-artifact@v4
        with:
          name: kernel-1-4
          path: kernel-1-4

      - name: Download Kernel Build Slight UC
        uses: actions/download-artifact@v4
        with:
          name: kernel-1-5
          path: kernel-1-5

      - name: Download Kernel Build Slight UC + Stock GPU
        uses: actions/download-artifact@v4
        with:
          name: kernel-1-6
          path: kernel-1-6

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b fusionX AnyKernel3-1

      - name: Move Kernel Files to AnyKernel3
        run: |
          mv kernel-1-1/* AnyKernel3-1/
          mv kernel-1-2/* AnyKernel3-1/
          mv kernel-1-3/* AnyKernel3-1/
          mv kernel-1-4/* AnyKernel3-1/
          mv kernel-1-5/* AnyKernel3-1/
          mv kernel-1-6/* AnyKernel3-1/

      - name: Define ZIP Name
        run: |
          COMPILED_DATE=$(date +%Y%m%d)
          echo "ZIP_NAME=[FD-][TEST-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV

      - name: Upload Flashable Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: |
            AnyKernel3-1/
            !AnyKernel3-1/.git
            !AnyKernel3-1/.github
