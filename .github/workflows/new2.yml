name: TRY2

on:
  pull_request:
  workflow_dispatch:
    inputs:
      BUILD_TITLE:
        description: 'Custom Build Title'
        required: false
      KERNEL_TREE_1:
        description: 'Kernel Tree'
        default: 'https://github.com/SenX-Private-Space/fx-tst.git'
        required: true
      CODENAME:
        description: 'Phone Codename'
        default: 'munch'
        required: true
      ANYKERNEL_URL:
        description: 'AnyKernel Url (leave blank if you dont want AnyKernel)'
        default: 'https://github.com/SenseiiX/AnyKernel3'
        required: false
      CUSTOM_SED:
        description: 'Custom Kernel Version'
        default: '-FusionX'
        required: false
      COMPILER:
        description: 'default=neutron, write aosp for aosp 20 clang'
        default: 'neutron'
        required: false
        type: choice
        options:
          - neutron
          - aosp
      USE_LTO_THIN:
        description: 'Use LTO THIN instead of LTO FULL'
        required: false
        type: boolean
        default: false

jobs:
  build:
    strategy:
      matrix:
        kernel: [1, 2, 3, 4]
        type: [original, modified, swift, normal-gpustk, slightuc-gpustk, effcpu-gpustk]
    runs-on: ubuntu-latest
    env:
      UPLOAD_TO_RELEASE: false

    steps:
      - name: Install Dependencies
        run: |
          sudo apt install flex libncurses6
          # Install zstd if using neutron clang
          if [[ "${{ github.event.inputs.COMPILER }}" == "neutron" ]]; then
            sudo apt install zstd
          fi

      - name: Cache Clang toolchain
        uses: actions/cache@v3
        id: cache-clang
        with:
          path: ${{ github.event.inputs.COMPILER == 'aosp' && 'clang-aosp' || 'clang-neutron' }}
          key: ${{ github.event.inputs.COMPILER }}-${{ runner.os }}-${{ github.event.inputs.COMPILER == 'aosp' && 'r547379' || '10032024-v1' }}
          restore-keys: |
            ${{ github.event.inputs.COMPILER }}-${{ runner.os }}-
            ${{ github.event.inputs.COMPILER }}-

      - name: Download & Extract Clang
        if: steps.cache-clang.outputs.cache-hit != 'true'
        run: |
          if [[ "${{ github.event.inputs.COMPILER }}" == "aosp" ]]; then
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz -O clang.tar.gz
            mkdir -p clang-aosp
            tar -xf clang.tar.gz -C clang-aosp
          else
            wget https://github.com/Neutron-Toolchains/clang-build-catalogue/releases/download/10032024/neutron-clang-10032024.tar.zst -O clang.tar.zst
            mkdir -p clang-neutron
            unzstd -d clang.tar.zst
            tar -xf clang.tar -C clang-neutron
          fi
          
      - name: Set Kernel Environment Variables
        run: |
          echo "KERNEL_TREE=${{ github.event.inputs.KERNEL_TREE_1 }}" >> $GITHUB_ENV
          case "${{ matrix.kernel }}" in
            1) echo "KERNEL_TREE_BRANCH=fx-base" >> $GITHUB_ENV ;;
            2) echo "KERNEL_TREE_BRANCH=fx-base" >> $GITHUB_ENV ;;
            3) echo "KERNEL_TREE_BRANCH=fx-base" >> $GITHUB_ENV ;;
            4) echo "KERNEL_TREE_BRANCH=fx-base" >> $GITHUB_ENV ;;
          esac
         
      - name: Checkout Kernel via PAT
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          if [[ "${{ github.event.inputs.KERNEL_TREE_1 }}" == "private" ]]; then
            REPO_URL="https://x-access-token:${GH_PAT}@github.com/SenX-Private-Space/fx-tst.git"
          else
            REPO_URL="${{ github.event.inputs.KERNEL_TREE_1 }}"
          fi
          git clone --depth=1 --branch "${{ env.KERNEL_TREE_BRANCH }}" "${REPO_URL}" kernel_tree

      - name: Kernel Version
        run: |
          cd kernel_tree
          if [[ "${{ github.event.inputs.CUSTOM_SED }}" != "-FusionX" ]]; then
            sed -i -e 's/CONFIG_LOCALVERSION="-FusionX"/CONFIG_LOCALVERSION="${{ github.event.inputs.CUSTOM_SED }}"/' arch/arm64/configs/vendor/munch_defconfig
          fi

      - name: Change LTO Configuration to THIN
        if: ${{ github.event.inputs.USE_LTO_THIN == 'true' }}
        run: |
          cd kernel_tree
          echo "Changing LTO configuration from FULL to THIN..."
          sed -i -e '
          /CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y/c\CONFIG_ARCH_SUPPORTS_LTO_CLANG_THIN=y
          /CONFIG_HAS_LTO_CLANG=y/c\CONFIG_HAS_LTO_CLANG=y
          /# CONFIG_LTO_NONE is not set/c\# CONFIG_LTO_NONE is not set
          /CONFIG_LTO_CLANG_FULL=y/c\# CONFIG_LTO_CLANG_FULL is not set
          /# CONFIG_LTO_CLANG_THIN is not set/c\CONFIG_LTO_CLANG_THIN=y
          ' arch/arm64/configs/vendor/munch_defconfig

      - name: Remove cycle count
        run: |
          cd kernel_tree
          sed -i '/case POWER_SUPPLY_PROP_CYCLE_COUNT:/,/break;/c\
          \tcase POWER_SUPPLY_PROP_CYCLE_COUNT:\
          \t#ifdef CONFIG_BATT_VERIFY_BY_DS28E16\
          \t\tpval->intval = fg->maxim_cycle_count;\
          \t#else\
          \t\trc = get_cycle_count(chip->counter, &pval->intval);\
          \t#endif\
          \t\tbreak;' drivers/power/supply/qcom/qpnp-fg-gen4.c
      
      - name: Apply Patches (Skip for Kernel 3)
        if: matrix.kernel != 3
        run: |
          cd kernel_tree
          bash nextpatch.sh

      - name: Apply Stock GPU Frequency Patch
        if: matrix.type == 'normal-gpustk' || matrix.type == 'slightuc-gpustk' || matrix.type == 'effcpu-gpustk'
        run: |
          cd kernel_tree
          echo "Applying stock GPU frequency patch for ${{ matrix.type }} build..."
          patch -p1 -f < "0001-stock-gpu-freq.patch"

      - name: Apply Modifications (if swift build)
        if: matrix.type == 'swift'
        run: |
          cd kernel_tree
          sed -i -e '/<2841600>,/c\<2841600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/d' arch/arm64/boot/dts/vendor/qcom/kona.dtsi

      - name: Apply Modifications (if modified build)
        if: matrix.type == 'modified'
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\//<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\//<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <155>;/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi

      - name: Apply Modifications (if slightuc-gpustk build)
        if: matrix.type == 'slightuc-gpustk'
        run: |
          cd kernel_tree
          sed -i -e '/<2841600>,/c\<2841600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/d' arch/arm64/boot/dts/vendor/qcom/kona.dtsi

      - name: Apply Modifications (if effcpu-gpustk build)
        if: matrix.type == 'effcpu-gpustk'
        run: |
          cd kernel_tree
          sed -i -e '/<2553600>,/c\<2553600>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2649600>,/c\//<2649600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2745600>,/c\//<2745600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<2841600>,/c\//<2841600>,' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e '/<3187200>;/c\//<3187200>;' arch/arm64/boot/dts/vendor/qcom/kona.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-width-dimension = <70>;/qcom,mdss-pan-physical-width-dimension = <695>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
          sed -i -e 's/qcom,mdss-pan-physical-height-dimension = <155>;/qcom,mdss-pan-physical-height-dimension = <1546>;/' arch/arm64/boot/dts/vendor/qcom/dsi-panel-l11r-38-08-0a-dsc-cmd.dtsi
      
      - name: Build Kernel
        run: |
          if [[ "${{ github.event.inputs.COMPILER }}" == "aosp" ]]; then
            export PATH="$(pwd)/clang-aosp/bin:$PATH"
          else
            export PATH="$(pwd)/clang-neutron/bin:$PATH"
          fi
          export ARCH=arm64
          export SUBARCH=ARM64
          export KBUILD_BUILD_USER="senx"
          export KBUILD_BUILD_HOST="ubuntu"
          export KBUILD_BUILD_TIMESTAMP="$(TZ=UTC-7 date)"
          cd kernel_tree
          make O=out vendor/munch_defconfig
          make O=out CC=clang -j$(nproc --all) CROSS_COMPILE=aarch64-linux-gnu- LLVM=1 LLVM_IAS=1
          
          # Check what files were actually generated
          echo "Generated files:"
          ls -la out/arch/arm64/boot/
          
          # Always copy Image
          cp out/arch/arm64/boot/Image ../Image
          
          # Handle different build types and kernel variants
          if [[ "${{ matrix.type }}" == "original" ]]; then
            if [[ "${{ matrix.kernel }}" == "1" ]]; then
              if [[ -f out/arch/arm64/boot/dtbo.img ]]; then
                cp out/arch/arm64/boot/dtbo.img ../munch-aosp-dtbo.img
              fi
              if [[ -f out/arch/arm64/boot/dtb ]]; then
                cp out/arch/arm64/boot/dtb ../munch-normal-dtb
              fi
            elif [[ "${{ matrix.kernel }}" == "2" ]]; then
              if [[ -f out/arch/arm64/boot/dtbo.img ]]; then
                cp out/arch/arm64/boot/dtbo.img ../munch-miui-dtbo.img
              fi
              if [[ -f out/arch/arm64/boot/dtb ]]; then
                cp out/arch/arm64/boot/dtb ../munch-effcpu-dtb
              fi
            fi
          elif [[ "${{ matrix.type }}" == "swift" ]]; then
            if [[ -f out/arch/arm64/boot/dtb ]]; then
              cp out/arch/arm64/boot/dtb ../munch-slightuc-dtb
            fi
          elif [[ "${{ matrix.type }}" == "modified" ]]; then
            if [[ "${{ matrix.kernel }}" == "1" || "${{ matrix.kernel }}" == "2" ]]; then
              if [[ -f out/arch/arm64/boot/dtbo.img ]]; then
                cp out/arch/arm64/boot/dtbo.img ../munch-miui-dtbo.img
              fi
              if [[ -f out/arch/arm64/boot/dtb ]]; then
                cp out/arch/arm64/boot/dtb ../munch-effcpu-dtb
              fi
            fi
          elif [[ "${{ matrix.type }}" == "normal-gpustk" ]]; then
            if [[ -f out/arch/arm64/boot/dtb ]]; then
              cp out/arch/arm64/boot/dtb ../munch-normal-gpustk-dtb
            fi
          elif [[ "${{ matrix.type }}" == "slightuc-gpustk" ]]; then
            if [[ -f out/arch/arm64/boot/dtb ]]; then
              cp out/arch/arm64/boot/dtb ../munch-slightuc-gpustk-dtb
            fi
          elif [[ "${{ matrix.type }}" == "effcpu-gpustk" ]]; then
            if [[ -f out/arch/arm64/boot/dtb ]]; then
              cp out/arch/arm64/boot/dtb ../munch-effcpu-gpustk-dtb
            fi
          fi

      - name: Verify build artifacts
        run: |
          echo "Checking for artifacts in current directory:"
          ls -la
          
          # Verify Image always exists
          if [[ -f Image ]]; then
            echo "✓ Image found"
          else
            echo "✗ Image missing"
            exit 1
          fi

      - name: Upload Kernel Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kernel-${{ matrix.kernel }}-${{ matrix.type }}
          path: |
            Image
            munch-aosp-dtbo.img
            munch-miui-dtbo.img
            munch-normal-dtb
            munch-slightuc-dtb
            munch-effcpu-dtb
            munch-normal-gpustk-dtb
            munch-slightuc-gpustk-dtb
            munch-effcpu-gpustk-dtb

  package_anykernel:
    needs: build
    strategy:
      matrix:
        kernel: [1, 2, 3]
    runs-on: ubuntu-latest

    steps:
      - name: Download All Kernel Build Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: kernel-${{ matrix.kernel }}-*
          path: kernel-artifacts
          merge-multiple: true

      - name: Clone AnyKernel3
        run: git clone --recursive --depth=1 ${{ github.event.inputs.ANYKERNEL_URL }} -b fusionX AnyKernel3-${{ matrix.kernel }}

      - name: Move Kernel Files to AnyKernel3
        run: |
          # Move all kernel artifacts to AnyKernel3
          cp -v kernel-artifacts/* AnyKernel3-${{ matrix.kernel }}/ || true
          
          # List all files in AnyKernel3 to verify
          echo "Contents of AnyKernel3 directory:"
          ls -la AnyKernel3-${{ matrix.kernel }}/

      - name: Define ZIP Name
        run: |
          COMPILED_DATE=$(date +%Y%m%d)
          if [[ "${{ matrix.kernel }}" == "1" ]]; then
            echo "ZIP_NAME=[FusionX-][next-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          elif [[ "${{ matrix.kernel }}" == "2" ]]; then
            echo "ZIP_NAME=[FusionX-][susfs-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          else
            echo "ZIP_NAME=[FusionX-][noksu-${{ github.event.inputs.CODENAME }}-$COMPILED_DATE]" >> $GITHUB_ENV
          fi
      
      - name: Upload Flashable Kernel Zip
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: |
            AnyKernel3-${{ matrix.kernel }}/
            !AnyKernel3-${{ matrix.kernel }}/.git
            !AnyKernel3-${{ matrix.kernel }}/.github
